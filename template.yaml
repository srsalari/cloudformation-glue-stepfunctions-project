AWSTemplateFormatVersion: '2010-09-09'
Description: >
  CloudFormation Template that creates:
    • An IAM Role with permissions for AWS Glue, Step Functions, SQS, and SNS
    • An AWS Glue Job for data processing using the external script located at "s3://q3-glue-project/script.py"
    • An SQS Queue for message processing with a unique name
    • An SNS Topic for notifications with a unique name
    • An AWS Step Functions State Machine with a 5-step workflow

Resources:
  GlueStepFunctionsRole:
    Type: AWS::IAM::Role
    Properties:
      # Optionally supply a RoleName using !Sub to ensure uniqueness.
      # RoleName: !Sub "GlueStepFunctionsRole-${AWS::AccountId}-${AWS::Region}"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - states.amazonaws.com
                - glue.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: GlueStepFunctionsPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - glue:StartJobRun
                Resource: "*"   # For production, restrict to your Glue Job ARN
              - Effect: Allow
                Action:
                  - sqs:SendMessage
                Resource: "*"   # Restrict if possible
              - Effect: Allow
                Action:
                  - sns:Publish
                Resource: "*"   # Restrict if possible

  MyGlueJob:
    Type: AWS::Glue::Job
    Properties:
      Name: "MyGlueJob"
      Role: !GetAtt GlueStepFunctionsRole.Arn
      Command:
        Name: "glueetl"
        ScriptLocation: "s3://q3-glue-project/script.py"
      GlueVersion: "2.0"
      MaxCapacity: 2.0
  
  MyQueue:
    Type: AWS::SQS::Queue
    Properties:
      # Append account and region to ensure the queue name is unique.
      QueueName: !Sub "MyQueue-${AWS::AccountId}-${AWS::Region}"

  MySNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      # Ensure the topic name is unique by appending account and region.
      TopicName: !Sub "MySNSTopic-${AWS::AccountId}-${AWS::Region}"

  MyStateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: "MyStateMachine"
      RoleArn: !GetAtt GlueStepFunctionsRole.Arn
      DefinitionString: !Sub |
        {
          "StartAt": "Step-1: Start",
          "States": {
            "Step-1: Start": {
              "Type": "Pass",
              "Next": "Step-2: Trigger Glue Job"
            },
            "Step-2: Trigger Glue Job": {
              "Type": "Task",
              "Resource": "arn:aws:states:::glue:startJobRun.sync",
              "Parameters": {
                "JobName": "${MyGlueJob}"
              },
              "Next": "Step-3: Send SQS Message"
            },
            "Step-3: Send SQS Message": {
              "Type": "Task",
              "Resource": "arn:aws:states:::sqs:sendMessage",
              "Parameters": {
                "QueueUrl": "${MyQueue}",
                "MessageBody": "Trigger SQS Message"
              },
              "Next": "Step-4: Publish SNS Message"
            },
            "Step-4: Publish SNS Message": {
              "Type": "Task",
              "Resource": "arn:aws:states:::sns:publish",
              "Parameters": {
                "TopicArn": "${MySNSTopic}",
                "Message": "Trigger SNS Notification"
              },
              "Next": "Step-5: Stop"
            },
            "Step-5: Stop": {
              "Type": "Pass",
              "End": true
            }
          }
        }

Outputs:
  GlueJobName:
    Description: "Name of the AWS Glue Job."
    Value: !Ref MyGlueJob
  SQSQueueUrl:
    Description: "URL of the SQS Queue."
    Value: !Ref MyQueue
  SNSTopicARN:
    Description: "ARN of the SNS Topic."
    Value: !Ref MySNSTopic
  StateMachineARN:
    Description: "ARN of the Step Functions State Machine."
    Value: !Ref MyStateMachine